@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @using (Html.BeginForm())
    {
        <div class="form-group">
            <label for="emailContent">Email Content:</label>
            <textarea class="form-control" id="emailContent" rows="10">Dear Esteemed Colleague,
    I hope this message finds you in the highest spirits and excellent health. I am writing to cordially inquire about your plans concerning the upcoming gathering that has piqued the interest of many within our professional community—the Code & Comedy Conference.
    This unique event promises to amalgamate the enlightening world of computer programming with the invigorating charm of humor, offering a platform for like-minded individuals to share knowledge, engage in thought-provoking discussions, and enjoy a respite from our often too-serious endeavors.
    Your presence at such a confluence of intellectual and jovial exchange would undoubtedly enrich the experience for all involved. May I presume that you are considering gracing this conference with your attendance? It would be a pleasure to partake in the sessions alongside a scholar of your caliber.
    Please do inform me of your intentions at your earliest convenience, as I eagerly anticipate the possibility of our collaborative participation.

    Warm regards,
    </textarea>
        </div>
        <button type="button" id="rewriteButton" class="btn btn-primary mt-3">Rewrite</button>
        <div id="spinner" class="spinner-border text-primary" style="display: none;"></div>

        <div id="result"></div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('rewriteButton').addEventListener('click', function () {
                var emailContent = document.getElementById('emailContent').value;
                document.getElementById('rewriteButton').disabled = true;
                document.getElementById('spinner').style.display = 'block';
                fetch('/api/rewrite', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 'content': emailContent })
                })
                .then(response => {
                    const reader = response.body.getReader();
                    const stream = new ReadableStream({
                        start(controller) {
                            function push() {
                                reader.read().then(({done, value}) => {
                                    if (done) {
                                        controller.close();
                                        document.getElementById('spinner').style.display = 'none';
                                        document.getElementById('rewriteButton').disabled = false;
                                        return;
                                    }
                                    controller.enqueue(value);
                                    document.getElementById('result').innerHTML += new TextDecoder().decode(value);
                                    push();
                                })
                            }
                            push();
                        }
                    });
                    return new Response(stream, { headers: { "Content-Type": "text/html" } });
                })
                .catch((error) => {
                    console.error('Error:', error);
                    document.getElementById('spinner').style.display = 'none';
                    document.getElementById('rewriteButton').disabled = false;
                });
            });
        });
    </script>
}
